
# System Setup Utility

This is a little program/script for system setup.
It builds out quite a bit of stuff.
My hope is to make it very flexible in what it builds out and what it doesn't, perhaps with Scons for dependencies and tracking of what has already been build (so it can be run to maintain sytems, not just set them up).
I'm thinking of topical build sets, like `compbio` for beast and associated stuff, `programming` for all programming stuff, `database` for all database stuff, etc.

For now though, it's a bit more on the simple side.
The following stuff is set up:

* Ruby (via rvm)
* Python
* csvkit
* bio stuff (beast, tracer, figtree, aptx)
* om my zsh
* vim pathogen setup
* dotfiles ?
* leinengen

## Questions

* How are privileges going to be handled?
* Should sudos be in scripts or in the python builder?
* Might want to consider using custom cleaners for some things - http://www.scons.org/wiki/CustomCleanActions.
* Should set up alias sets; in particular for things we're likely to want to keep in sync frequently.
* Also, worth thinking about making sure precious is used on things.
* Need a better way of keeping track of what needs to be built; touch seems to loose, date to strict
* Should definitely make the pathogen files more flexible; shouldn't have to rerun everything unless needed; will have to test
* spec files that people can use to decide what topics they want to install?
* Is it possible to automate figuring out which packages might conflict and dropping those out?
* config settings for different machines? Like different lock behaviour for laptop vs desktop

## Sketch:

* set up system:
    * first get ppas
    * then check for packages that the system doens't actually know about (apt-cache showpkg ...)
    * then install packages all in one go
* set up rvm
* install gems
* install vim pathogen setup
* python env:
    * pip install list: csvkit bioscons nestly default virtual_env
* load gnome-terminal-solarized
* other encaps?
* lein profile -> lein deps
* load dotfiles
* etc...

## TODO

* Get CrashPlan set up, maybe with automated data importing
* automate beast downloads
* capts -> control, as seen [here](http://www.emacswiki.org/emacs/MovingTheCtrlKey)
* screen lock - http://askubuntu.com/questions/430384/turn-screen-off-when-inactive-setting-from-terminal
  * gsettings set org.gnome.desktop.session idle-delay 0
* sunset
* move gnome-shell and ttf-mscorefonts to separate so configurations will pop up before long apt install
* have dotfiles take an option for not requiring any user entry
* maybe pass name and github stuff through command line
* Things to pull over from backups:
   * .zshhistory, .ssh
   * firefox tabs
   * autojump learning
* wifi-passwords :(
* grease monkey

